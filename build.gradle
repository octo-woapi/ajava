plugins {
    id 'com.diffplug.spotless' version '7.0.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '4.0.4'
    id 'org.springframework.boot' version "${globalSpringBootVersion}"
    id 'java'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    springBootVersion = "${globalSpringBootVersion}"
    springDocVersion = '2.8.5'
    springDotenvVersion = '4.0.0'
    mockitoVersion = '5.15.2'
    restAssuredVersion = '5.5.1'
    wiremockStandaloneVersion = '3.12.0'
}

group = 'com.octo.ajava'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    implementation "me.paulschwarz:spring-dotenv:${springDotenvVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.wiremock:wiremock-standalone:${wiremockStandaloneVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
}

spotless {
    java {
        targetExclude "build/**"
        googleJavaFormat()
        removeUnusedImports()
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

wrapper {
    gradleVersion = '8.12.1'
}
